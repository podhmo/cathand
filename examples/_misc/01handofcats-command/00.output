python -m handofcats 00single.py:hello
hello world
python -m handofcats 00single.py:hello -h
usage: hello [-h] [--name NAME] [--expose] [--inplace] [--typed]
             [--logging {CRITICAL,FATAL,ERROR,WARN,WARNING,INFO,DEBUG,NOTSET}]

optional arguments:
  -h, --help            show this help message and exit
  --name NAME           (default: 'world')
  --expose              dump generated code. with --inplace, eject from
                        handofcats dependency
  --inplace             overwrite file
  --typed               typed expression is dumped
  --logging {CRITICAL,FATAL,ERROR,WARN,WARNING,INFO,DEBUG,NOTSET}
python -m handofcats 00single.py:hello --expose
def hello(*, name: str = "world"):
    print(f"hello {name}")

def main(argv=None):
    import argparse

    parser = argparse.ArgumentParser(prog=hello.__name__, description=hello.__doc__)
    parser.print_usage = parser.print_help
    parser.add_argument('--name', required=False, default='world', help="(default: 'world')")
    args = parser.parse_args(argv)
    params = vars(args).copy()
    return hello(**params)


if __name__ == '__main__':
    main()
